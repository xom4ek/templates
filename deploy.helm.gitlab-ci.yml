---
stages:
  - check
  - build
  - test
  - analyse
  - release
  - deploy
  - migrate
  - validate
  - cleanup


include:
  - build.helm.gitlab-ci.yml

.helm_deploy_chart:
  image: $CI_TOOLS_REGISTRY/helm
  stage: deploy
  tags:
    - deploy
  script:
    - |
      if [[ "$CI_COMMIT_REF_SLUG" == "master" ]]; then
          KUBE_NAMESPACE=production
          HELM_CHART=.helm/release
          ENVIRONMENT=production
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.image.tag=$CI_COMMIT_SHORT_SHA "
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.podAnnotations.app\\.gitlab\\.com/app=${CI_PROJECT_PATH_SLUG} --set $CI_PROJECT_PATH_SLUG.podAnnotations.app\\.gitlab\\.com/env=${CI_ENVIRONMENT_SLUG}"
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.deploymentAnnotations.app\\.gitlab\\.com/app=${CI_PROJECT_PATH_SLUG} --set $CI_PROJECT_PATH_SLUG.deploymentAnnotations.app\\.gitlab\\.com/env=${CI_ENVIRONMENT_SLUG}"
      elif [[ "$CI_COMMIT_REF_SLUG" == "develop" ]]; then
          KUBE_NAMESPACE=staging
          HELM_CHART=.helm/release
          ENVIRONMENT=staging
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.image.tag=$CI_COMMIT_SHORT_SHA --set global.ingress.stagingDomain=$KUBE_BASE_DOMAIN "
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.podAnnotations.app\\.gitlab\\.com/app=${CI_PROJECT_PATH_SLUG} --set $CI_PROJECT_PATH_SLUG.podAnnotations.app\\.gitlab\\.com/env=${CI_ENVIRONMENT_SLUG}"
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.deploymentAnnotations.app\\.gitlab\\.com/app=${CI_PROJECT_PATH_SLUG} --set $CI_PROJECT_PATH_SLUG.deploymentAnnotations.app\\.gitlab\\.com/env=${CI_ENVIRONMENT_SLUG}"
      else
          KUBE_NAMESPACE=$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
          HELM_CHART=.helm/preview
          ENVIRONMENT=preview
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.$CI_PROJECT_PATH_SLUG.image.tag=$CI_COMMIT_SHORT_SHA --set global.ingress.stagingDomain=$CI_COMMIT_REF_SLUG.$KUBE_BASE_DOMAIN "
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.$CI_PROJECT_PATH_SLUG.podAnnotations.app\\.gitlab\\.com/app=${CI_PROJECT_PATH_SLUG} --set $CI_PROJECT_PATH_SLUG.$CI_PROJECT_PATH_SLUG.podAnnotations.app\\.gitlab\\.com/env=${CI_ENVIRONMENT_SLUG}"
          HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set $CI_PROJECT_PATH_SLUG.$CI_PROJECT_PATH_SLUG.deploymentAnnotations.app\\.gitlab\\.com/app=${CI_PROJECT_PATH_SLUG} --set $CI_PROJECT_PATH_SLUG.$CI_PROJECT_PATH_SLUG.deploymentAnnotations.app\\.gitlab\\.com/env=${CI_ENVIRONMENT_SLUG}"
      fi;
    - HELM_EXTRA_ARGS="$HELM_EXTRA_ARGS --set global.imageCredentials.username=${CI_REGISTRY_USER} --set global.imageCredentials.password=${CI_REGISTRY_PASSWORD} --set global.environment=${ENVIRONMENT} "
      if [[ -z "$CI_CHART_REGISTRY" ]]; then
        echo no chart-registry
      else
        helm repo add private ${CI_CHART_REGISTRY}
      fi
    - ( cd .helm/preview && for dep in $(helm dep list| grep "file://" | cut -f 3 | sed s#file:/#.#); do  helm dep update $dep; done ) || true
    - cd $CI_BUILDS_DIR
    - helm dependency update .helm/release || true
    - helm dependency update .helm/preview || true
    - set -vx
    - helm upgrade \
        --install $CI_PROJECT_PATH_SLUG \
        $HELM_CHART \
        --namespace ${KUBE_NAMESPACE} \
        --create-namespace \
        --atomic \
        --timeout 5m \
        $HELM_EXTRA_ARGS
    - echo "START=START" >> deploy.env
    - DYNAMIC_ENVIRONMENT_URL=$(helm get notes $CI_PROJECT_PATH_SLUG --namespace ${KUBE_NAMESPACE} | grep -Eo "(http|https)://.+" | head -1) || true
    - echo "DYNAMIC_ENVIRONMENT_URL=$DYNAMIC_ENVIRONMENT_URL" >> deploy.env
    - echo "KUBE_NAMESPACE=$KUBE_NAMESPACE" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env

.deploy_helm:
  extends: .helm_deploy_chart
  environment:
    name: review/k8s/$CI_COMMIT_REF_SLUG
    url: $DYNAMIC_ENVIRONMENT_URL
    on_stop: stop_helm
    auto_stop_in: 1 week
    kubernetes:
      namespace: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_COMMIT_REF_NAME != "master" && $CI_COMMIT_REF_NAME != "develop"

deploy_helm:
  extends: .deploy_helm

.stop_helm:
  image: $CI_TOOLS_REGISTRY/helm
  variables:
    GIT_STRATEGY: none
  stage: cleanup
  environment:
    name: review/k8s/$CI_COMMIT_REF_SLUG
    action: stop
  artifacts:
    reports:
      dotenv: deploy.env
  allow_failure: true
  script:
    - helm uninstall $CI_PROJECT_PATH_SLUG --namespace $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
    - kubectl delete namespace $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_COMMIT_REF_NAME != "master" && $CI_COMMIT_REF_NAME != "develop"
      when: manual

stop_helm:
  extends: .stop_helm

.deploy_helm_staging:
  extends: .helm_deploy_chart
  environment:
    name: staging/k8s
    url: $DYNAMIC_ENVIRONMENT_URL
    kubernetes:
      namespace: staging
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"

deploy_helm_staging:
  extends: .deploy_helm_staging

.deploy_helm_production:
  extends: .helm_deploy_chart
  environment:
    name: production/k8s
    url: $DYNAMIC_ENVIRONMENT_URL
    kubernetes:
      namespace: production
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

deploy_helm_production:
  extends: .deploy_helm_production
