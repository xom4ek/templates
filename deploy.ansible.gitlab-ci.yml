---
.ans-validate:
  image: $CI_TOOLS_REGISTRY/ansible-toolset
  stage: validate
  script:
    - chmod 600 $ANSIBLE_SSH_KEY
    - mkdir -p ~/.ssh
    - cp $ANSIBLE_SSH_KEY ~/.ssh/id_rsa
    - chmod 600 -R ~/.ssh
    - cd ${ANS_ROOT}
    - ansible-galaxy install -r requirements.yml
    - ansible-playbook -vvv --syntax-check -i inventory -l $ANS_ENV --vault-password-file $ANSIBLE_VAULT_PASSWORD_FILE --private-key $ANSIBLE_SSH_KEY --user root playbook.yaml
  rules:
    - changes: ${ANS_ROOT}/**/*

.ans-plan:
  stage: plan
  image: $CI_TOOLS_REGISTRY/ansible-toolset
  script:
    - chmod 600 $ANSIBLE_SSH_KEY
    - mkdir -p ~/.ssh
    - cp $ANSIBLE_SSH_KEY ~/.ssh/id_rsa
    - chmod 600 -R ~/.ssh
    - cd ${ANS_ROOT}
    - ansible-galaxy install -r requirements.yml
    - ansible-playbook --check --diff -i inventory -l $ANS_ENV --vault-password-file $ANSIBLE_VAULT_PASSWORD_FILE --private-key $ANSIBLE_SSH_KEY --user root playbook.yaml | tee ansible_test.diff
  # variables:
  #   ANSIBLE_STDOUT_CALLBACK: actionable
  artifacts:
    paths:
      - ${ANS_ROOT}/ansible_test.diff
  tags:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH !- "master"
      changes: ${ANS_ROOT}/**/*

.ans-roles:
  stage: deploy-ans

  timeout: 3h
  image: $CI_TOOLS_REGISTRY/ansible-toolset:latest
  script:
    - chmod 600 $ANSIBLE_SSH_KEY
    - mkdir -p ~/.ssh
    - cp $ANSIBLE_SSH_KEY ~/.ssh/id_rsa
    - chmod 600 -R ~/.ssh
    - cd ${ANS_ROOT}
    - ansible-galaxy install -r requirements.yml
    - ansible-playbook -i inventory -l $ANS_ENV --vault-password-file $ANSIBLE_VAULT_PASSWORD_FILE --private-key $ANSIBLE_SSH_KEY --user root playbook.yaml
  tags:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes: ${ANS_ROOT}/**/*
      when: manual
