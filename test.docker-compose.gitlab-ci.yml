---
stages:
  - check
  - build
  - test
  - analyse
  - release
  - deploy
  - migrate
  - validate
  - cleanup


.docker_login:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD_GITLAB $CI_REGISTRY_GITLAB

.docker_proxy_on:
  before_script:
    - mkdir -p $HOME/.docker/
    - 'echo "{ \"proxies\": { \"default\": { \"httpProxy\": \"$HTTP_PROXY\", \"httpsProxy\": \"$HTTPS_PROXY\", \"noProxy\": \"$NO_PROXY\" } } }" > $HOME/.docker/config.json'

.docker_full:
  before_script:
    - !reference [.docker_proxy_on, before_script]
    - !reference [.docker_login, before_script]

variables:
  TEST_COMMAND: echo Specify test command!
  TEST_TARGET: $CI_PROJECT_NAME

.compose-env-test:
  script:
    - set -vx
    - |
      if [[ -z "$IMAGE" ]]; then
        export IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
      else
        echo already set IMAGE
      fi
      echo IMAGE=$IMAGE
    - |
      if [[ -z "$COMPOSE_FILE" ]]; then
        if [ "$CI_COMMIT_REF_SLUG" = "main" ] || [ "$CI_COMMIT_REF_SLUG" = "master" ]; then
          export COMPOSE_FILE=docker-compose.prod.yaml
        elif [ "$CI_COMMIT_REF_SLUG" = "develop" ]; then
          export COMPOSE_FILE=docker-compose.stage.yaml
        else
          export COMPOSE_FILE=docker-compose.test.yaml
        fi
      else
        echo already set
      fi
      echo COMPOSE_FILE=$COMPOSE_FILE
    - |
      if [[ -z "$DOCKER_HOSTS" ]]; then
        if [ "$CI_COMMIT_REF_SLUG" = "main" ] || [ "$CI_COMMIT_REF_SLUG" = "master" ]; then
          export DOCKER_HOSTS=$DOCKER_PROD_HOSTS
        elif [ "$CI_COMMIT_REF_SLUG" = "develop" ]; then
          export DOCKER_HOSTS=$DOCKER_TEST_HOSTS
        else
          export DOCKER_HOSTS=$DOCKER_TEST_HOSTS
        fi
      else
        echo already set
      fi
      echo COMPOSE_FILE=$COMPOSE_FILE
    - |
      if [[ -z "$NETWORK" ]]; then
        export NETWORK=$CI_PROJECT_NAMESPACE
      else
        echo already set
      fi
      echo NETWORK=$NETWORK
    - |
      if [[ -z "$DOMAIN" ]]; then
        if [ "$CI_COMMIT_REF_SLUG" = "main" ] || [ "$CI_COMMIT_REF_SLUG" = "master" ] && [ ! -z "$DOMAIN_PROD" ]; then
          export DOMAIN=$DOMAIN_PROD
        elif [ "$CI_COMMIT_REF_SLUG" = "develop" ] && [ ! -z "$DOMAIN_STAGE" ]; then
          export DOMAIN=$DOMAIN_STAGE
        else
          export DOMAIN=$CI_BUILD_REF_SLUG.$CI_PROJECT_NAME.$CI_PROJECT_NAMESPACE.$DEMO_DOMAIN
        fi
      else
        echo already set
      fi
      echo DOMAIN=$DOMAIN
    - |
      if [[ -z "$COMPOSE_PROJECT_NAME" ]]; then
        if [ "$CI_COMMIT_REF_SLUG" = "main" ] || [ "$CI_COMMIT_REF_SLUG" = "master" ]; then
          export COMPOSE_PROJECT_NAME=$CI_PROJECT_PATH_SLUG
        else
          export COMPOSE_PROJECT_NAME=$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
        fi
      else
        echo already set COMPOSE_PROJECT_NAME
      fi
      export UUID=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 32 | head -n 1)
      export COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME-$UUID
      echo COMPOSE_PROJECT_NAME=$COMPOSE_PROJECT_NAME

.compose_test:
  image: $CI_TOOLS_REGISTRY/docker-compose
  stage: test
  variables:
    COMPOSE_FILE: docker-compose.test.yaml
  extends: .docker_full
  tags:
    - test
  script:
    - !reference [.compose-env-test, script]
    - docker-compose run --rm $TEST_TARGET sh -c "sleep 10 && $TEST_COMMAND" && touch success
    - docker-compose down
    - |
      if [[ -e success ]]; then
        echo Test success!
      else
        echo Test failed!
        exit 1
      fi

test_compose:
  extends: .compose_test
